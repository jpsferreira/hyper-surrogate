import logging

import numpy as np
import pytest
import sympy as sym

from hyper_surrogate.kinematics import Kinematics as K
from hyper_surrogate.materials import NeoHooke

# seed random number generator
np.random.seed(0)


@pytest.fixture
def neohooke():
    return NeoHooke()


@pytest.fixture
def f0():
    # no deformation
    return np.array(np.eye(3))


@pytest.fixture
def f_uni():
    # uniaxial stretch 3 at x-axis. 3x3 matrix. 3,0,0; 0,1/sqrt(3),0; 0,0,1/sqrt(3)
    return np.array(np.diag([3, 1 / np.sqrt(3), 1 / np.sqrt(3)]))


@pytest.fixture
def f_arbitrary():
    return np.array([[3.0, 0.4, 0.1], [0.4, 1 / np.sqrt(3.0), 0.1], [0.9, -0.2, 0.6]])


@pytest.fixture
def f_arbitrary2():
    return np.array([[3.0, 0.4, 0.1], [0.4, 0.45, 0.1], [0.9, -0.2, 0.9]])


@pytest.fixture
def f(f0, f_uni, f_arbitrary, f_arbitrary2):
    return np.array([f0, f_uni, f_arbitrary, f_arbitrary2])


@pytest.fixture
def c_tensor(f):
    return K.right_cauchy_green(f)


def test_sef(neohooke):
    assert neohooke.sef == (neohooke.invariant1 - 3) * sym.Symbol("C10")


def test_lambdify_sef(neohooke, c_tensor):
    sef_func = neohooke.substitute_iterator(neohooke.sef, c_tensor, {"C10": 1})
    sef_values = np.array(list(sef_func))
    assert sef_values.shape == (4,)
    assert sef_values[0] == 0
    # all remaining values should be positive
    assert sef_values[1:].all() > 0


def test_lambdify_pk2(neohooke, c_tensor):
    # c10=1
    pk2_func = neohooke.evaluate_iterator(neohooke.pk2(), c_tensor, 1)
    pk2_values = np.array(list(pk2_func))
    assert pk2_values.shape == (4, 3, 3)
    # no deformation
    assert np.allclose(pk2_values[0], 0)
    # uniaxial stretch 3 at x-axis
    assert np.allclose(
        pk2_values[1],
        [
            [1.2839506172839503, 0, 0],
            [0, -17.333333333333325, 0],
            [0, 0, -17.333333333333325],
        ],
    )
    # random deformation
    assert np.allclose(
        pk2_values[2],
        [
            [0.47698872071292914, 3.7974644907036370, 3.8146126481050007],
            [3.7974644907036370, -21.098062333064327, -10.149138565098266],
            [3.8146126481050007, -10.149138565098266, -26.762466478176837],
        ],
    )
    # random deformation2
    assert np.allclose(
        pk2_values[3],
        [
            [5.5268336167262878e-002, 6.1233382806947079, 3.1960197886296906],
            [6.1233382806947079, -36.662877397196567, -12.892944575515303],
            [3.1960197886296906, -12.892944575515303, -12.398475045842547],
        ],
    )


def test_lambdify_cmat(neohooke, c_tensor):
    cmat_func = neohooke.evaluate_iterator(neohooke.cmat(), c_tensor, 1)
    cmat_values = np.array(list(cmat_func))
    assert cmat_values.shape == (4, 3, 3, 3, 3)
    # uniaxial stretch 3 at x-axis
    # random deformation
    # random deformation2 has the following 81 values:
    logging.info(c_tensor[0])
    logging.info(cmat_values[0])


#     assert np.allclose(
#         cmat_values[3],
#             [
# #  cmiso           1           1           1           1  0.60472437367430831
# #  cmiso           1           1           1           2  -3.1494209452385062
# #  cmiso           1           1           1           3  -1.6438111373727866
# #  cmiso           1           1           2           1  -3.1494209452385062
# #  cmiso           1           1           2           2   10.293214033481952
# #  cmiso           1           1           2           3   5.5785938350665880
# #  cmiso           1           1           3           1  -1.6438111373727866
# #  cmiso           1           1           3           2   5.5785938350665880
# #  cmiso           1           1           3           3   2.5501823765593117
#         # i=1 block
#         [[[0.60472437367430831, -3.1494209452385062, -1.6438111373727866],
#         [-3.1494209452385062, 10.293214033481952, 5.5785938350665880],
#         [-1.6438111373727866, 5.5785938350665880, 2.5501823765593117]],
# #  cmiso           1           2           1           1  -3.1494209452385062
# #  cmiso           1           2           1           2   19.024377006259396
# #  cmiso           1           2           1           3   8.0558321717639689
# #  cmiso           1           2           2           1   19.024377006259396
# #  cmiso           1           2           2           2  -89.653785261770238
# #  cmiso           1           2           2           3  -36.745781652667972
# #  cmiso           1           2           3           1   8.0558321717639689
# #  cmiso           1           2           3           2  -36.745781652667972
# #  cmiso           1           2           3           3  -19.192673037460068

#         [[-3.1494209452385062, 19.024377006259396, 8.0558321717639689],
#         [19.024377006259396, -89.653785261770238, -36.745781652667972],
#         [8.0558321717639689, -36.745781652667972, -19.192673037460068]],
# #  cmiso           1           3           1           1  -1.6438111373727866
# #  cmiso           1           3           1           2   8.0558321717639689
# #  cmiso           1           3           1           3   6.1599006788280724
# #  cmiso           1           3           2           1   8.0558321717639689
# #  cmiso           1           3           2           2  -34.051436609353004
# #  cmiso           1           3           2           3  -22.501974069057535
# #  cmiso           1           3           3           1   6.1599006788280724
# #  cmiso           1           3           3           2  -22.501974069057535
# #  cmiso           1           3           3           3  -16.957449876906175
#         [[-1.6438111373727866, 8.0558321717639689, 6.1599006788280724],
#         [8.0558321717639689, -34.051436609353004, -22.501974069057535],
#         [6.1599006788280724, -22.501974069057535, -16.957449876906175]]],
# #  cmiso           2           1           1           1  -3.1494209452385062
# #  cmiso           2           1           1           2   19.024377006259396
# #  cmiso           2           1           1           3   8.0558321717639689
# #  cmiso           2           1           2           1   19.024377006259396
# #  cmiso           2           1           2           2  -89.653785261770238
# #  cmiso           2           1           2           3  -36.745781652667972
# #  cmiso           2           1           3           1   8.0558321717639689
# #  cmiso           2           1           3           2  -36.745781652667972
# #  cmiso           2           1           3           3  -19.192673037460068
#         [[[-3.1494209452385062, 19.024377006259396, 8.0558321717639689],
#         [19.024377006259396, -89.653785261770238, -36.745781652667972],
#         [8.0558321717639689, -36.745781652667972, -19.192673037460068]],
# #  cmiso           2           2           1           1   10.293214033481952
# #  cmiso           2           2           1           2  -89.653785261770238
# #  cmiso           2           2           1           3  -34.051436609352997
# #  cmiso           2           2           2           1  -89.653785261770238
# #  cmiso           2           2           2           2   557.09229599380137
# #  cmiso           2           2           2           3   188.76979049310577
# #  cmiso           2           2           3           1  -34.051436609352997
# #  cmiso           2           2           3           2   188.76979049310577
# #  cmiso           2           2           3           3   91.357122199479292
#         [[10.293214033481952, -89.653785261770238, -34.051436609352997],
#         [-89.653785261770238, 557.09229599380137, 188.76979049310577],
#         [-34.051436609352997, 188.76979049310577, 91.357122199479292]],
# #  cmiso           2           3           1           1   5.5785938350665880
# #  cmiso           2           3           1           2  -36.745781652667972
# #  cmiso           2           3           1           3  -22.501974069057535
# #  cmiso           2           3           2           1  -36.745781652667972
# #  cmiso           2           3           2           2   188.76979049310577
# #  cmiso           2           3           2           3   119.19090412843957
# #  cmiso           2           3           3           1  -22.501974069057535
# #  cmiso           2           3           3           2   119.19090412843957
# #  cmiso           2           3           3           3   68.407417933657229
#         [[5.5785938350665880, -36.745781652667972, -22.501974069057535],
#         [-36.745781652667972, 188.76979049310577, 119.19090412843957],
#         [-22.501974069057535, 119.19090412843957, 68.407417933657229]]],
# #  cmiso           3           1           1           1  -1.6438111373727866
# #  cmiso           3           1           1           2   8.0558321717639689
# #  cmiso           3           1           1           3   6.1599006788280724
# #  cmiso           3           1           2           1   8.0558321717639689
# #  cmiso           3           1           2           2  -34.051436609353004
# #  cmiso           3           1           2           3  -22.501974069057535
# #  cmiso           3           1           3           1   6.1599006788280724
# #  cmiso           3           1           3           2  -22.501974069057535
# #  cmiso           3           1           3           3  -16.957449876906175
#         # i=3 block
#         [[[-1.6438111373727866, 8.0558321717639689, 6.1599006788280724],
#         [8.0558321717639689, -34.051436609353004, -22.501974069057535],
#         [6.1599006788280724, -22.501974069057535, -16.957449876906175]],
# #  cmiso           3           2           1           1   5.5785938350665880
# #  cmiso           3           2           1           2  -36.745781652667972
# #  cmiso           3           2           1           3  -22.501974069057535
# #  cmiso           3           2           2           1  -36.745781652667972
# #  cmiso           3           2           2           2   188.76979049310577
# #  cmiso           3           2           2           3   119.19090412843957
# #  cmiso           3           2           3           1  -22.501974069057535
# #  cmiso           3           2           3           2   119.19090412843957
# #  cmiso           3           2           3           3   68.407417933657229
#         [[5.5785938350665880, -36.745781652667972, -22.501974069057535],
#         [-36.745781652667972, 188.76979049310577, 119.19090412843957],
#         [-22.501974069057535, 119.19090412843957, 68.407417933657229]],
# #  cmiso           3           3           1           1   2.5501823765593117
# #  cmiso           3           3           1           2  -19.192673037460068
# #  cmiso           3           3           1           3  -16.957449876906175
# #  cmiso           3           3           2           1  -19.192673037460068
# #  cmiso           3           3           2           2   91.357122199479292
# #  cmiso           3           3           2           3   68.407417933657229
# #  cmiso           3           3           3           1  -16.957449876906175
# #  cmiso           3           3           3           2   68.407417933657229
# #  cmiso           3           3           3           3   73.087170220149204
#         [[2.5501823765593117, -19.192673037460068, -16.957449876906175],
#         [-19.192673037460068, 91.357122199479292, 68.407417933657229],
#         [-16.957449876906175, 68.407417933657229, 73.087170220149204]]]
#     ])
